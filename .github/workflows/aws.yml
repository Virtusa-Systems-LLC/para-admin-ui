on:
  push:
    branches:
    - main
  
  release:
    types: [created]


name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy-test
    runs-on: ubuntu-latest
    environment: production
    
    steps:

    - name: Show Working directory
      run: pwd  

    - name: Show Working directory
      run: ls -la  

    - name: Checkout
      uses: actions/checkout@v2

    - name: Show Working directory
      run: ls -ltr  
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push node-express image to Amazon ECR fixed image name
      id: build-node-express-id
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: vss-images
        IMAGE_TAG: vcp-node-cloud-svc-main-img-efs
#         VERSION: 1.0.0
      run: |
        ls -ltr
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" 
        
  
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: node-express
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
       task-definition: ecs-task-definition.json
       container-name: vcp-node-cloud-svc-img-efs
       image: vcp-node-cloud-svc-main-img-efs
    - name: Restart container Now I have enough memory
      run: aws ecs update-service --cluster vcp-prod-cluster-svc --service vcp-node-svc --force-new-deployment
     
 #  docker tag ${IMAGE_TAG}:${VERSION} ${IMAGE_TAG}:latest

 
